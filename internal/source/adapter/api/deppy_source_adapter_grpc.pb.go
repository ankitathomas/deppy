// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.15.6
// source: deppy_source_adapter.proto

package api

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// DeppySourceAdapterClient is the client API for DeppySourceAdapter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type DeppySourceAdapterClient interface {
	ListEntities(ctx context.Context, in *ListEntitiesRequest, opts ...grpc.CallOption) (DeppySourceAdapter_ListEntitiesClient, error)
}

type deppySourceAdapterClient struct {
	cc grpc.ClientConnInterface
}

func NewDeppySourceAdapterClient(cc grpc.ClientConnInterface) DeppySourceAdapterClient {
	return &deppySourceAdapterClient{cc}
}

func (c *deppySourceAdapterClient) ListEntities(ctx context.Context, in *ListEntitiesRequest, opts ...grpc.CallOption) (DeppySourceAdapter_ListEntitiesClient, error) {
	stream, err := c.cc.NewStream(ctx, &DeppySourceAdapter_ServiceDesc.Streams[0], "/api.DeppySourceAdapter/ListEntities", opts...)
	if err != nil {
		return nil, err
	}
	x := &deppySourceAdapterListEntitiesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DeppySourceAdapter_ListEntitiesClient interface {
	Recv() (*Entity, error)
	grpc.ClientStream
}

type deppySourceAdapterListEntitiesClient struct {
	grpc.ClientStream
}

func (x *deppySourceAdapterListEntitiesClient) Recv() (*Entity, error) {
	m := new(Entity)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DeppySourceAdapterServer is the server API for DeppySourceAdapter service.
// All implementations must embed UnimplementedDeppySourceAdapterServer
// for forward compatibility
type DeppySourceAdapterServer interface {
	ListEntities(*ListEntitiesRequest, DeppySourceAdapter_ListEntitiesServer) error
	mustEmbedUnimplementedDeppySourceAdapterServer()
}

// UnimplementedDeppySourceAdapterServer must be embedded to have forward compatible implementations.
type UnimplementedDeppySourceAdapterServer struct {
}

func (UnimplementedDeppySourceAdapterServer) ListEntities(*ListEntitiesRequest, DeppySourceAdapter_ListEntitiesServer) error {
	return status.Errorf(codes.Unimplemented, "method ListEntities not implemented")
}
func (UnimplementedDeppySourceAdapterServer) mustEmbedUnimplementedDeppySourceAdapterServer() {}

// UnsafeDeppySourceAdapterServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to DeppySourceAdapterServer will
// result in compilation errors.
type UnsafeDeppySourceAdapterServer interface {
	mustEmbedUnimplementedDeppySourceAdapterServer()
}

func RegisterDeppySourceAdapterServer(s grpc.ServiceRegistrar, srv DeppySourceAdapterServer) {
	s.RegisterService(&DeppySourceAdapter_ServiceDesc, srv)
}

func _DeppySourceAdapter_ListEntities_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListEntitiesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DeppySourceAdapterServer).ListEntities(m, &deppySourceAdapterListEntitiesServer{stream})
}

type DeppySourceAdapter_ListEntitiesServer interface {
	Send(*Entity) error
	grpc.ServerStream
}

type deppySourceAdapterListEntitiesServer struct {
	grpc.ServerStream
}

func (x *deppySourceAdapterListEntitiesServer) Send(m *Entity) error {
	return x.ServerStream.SendMsg(m)
}

// DeppySourceAdapter_ServiceDesc is the grpc.ServiceDesc for DeppySourceAdapter service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var DeppySourceAdapter_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "api.DeppySourceAdapter",
	HandlerType: (*DeppySourceAdapterServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListEntities",
			Handler:       _DeppySourceAdapter_ListEntities_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "deppy_source_adapter.proto",
}
